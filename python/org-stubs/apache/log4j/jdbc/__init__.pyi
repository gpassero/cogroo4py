import org.apache.log4j
import org.apache.log4j.spi
import typing



class JDBCAppender(org.apache.log4j.AppenderSkeleton, org.apache.log4j.Appender):
    def __init__(self): ...
    def append(self, loggingEvent: org.apache.log4j.spi.LoggingEvent) -> None: ...
    def close(self) -> None: ...
    def finalize(self) -> None: ...
    def flushBuffer(self) -> None: ...
    def getBufferSize(self) -> int: ...
    def getLocationInfo(self) -> bool: ...
    def getPassword(self) -> str: ...
    def getSql(self) -> str: ...
    def getURL(self) -> str: ...
    def getUser(self) -> str: ...
    def requiresLayout(self) -> bool: ...
    def setBufferSize(self, int: int) -> None: ...
    def setDriver(self, string: str) -> None: ...
    def setLocationInfo(self, boolean: bool) -> None: ...
    def setPassword(self, string: str) -> None: ...
    def setSql(self, string: str) -> None: ...
    def setURL(self, string: str) -> None: ...
    def setUser(self, string: str) -> None: ...


class __module_protocol__(typing.Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.apache.log4j.jdbc")``.

    JDBCAppender: typing.Type[JDBCAppender]
