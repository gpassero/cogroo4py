import java.awt
import java.awt.event
import java.util
import javax.swing
import javax.swing.event
import javax.swing.table
import javax.swing.tree
import org.apache.log4j.lf5
import typing



class CategoryAbstractCellEditor(javax.swing.table.TableCellEditor, javax.swing.tree.TreeCellEditor):
    def __init__(self): ...
    def addCellEditorListener(self, cellEditorListener: javax.swing.event.CellEditorListener) -> None: ...
    def cancelCellEditing(self) -> None: ...
    def getCellEditorValue(self) -> typing.Any: ...
    def getClickCountToStart(self) -> int: ...
    def getTableCellEditorComponent(self, jTable: javax.swing.JTable, object: typing.Any, boolean: bool, int: int, int2: int) -> java.awt.Component: ...
    def getTreeCellEditorComponent(self, jTree: javax.swing.JTree, object: typing.Any, boolean: bool, boolean2: bool, boolean3: bool, int: int) -> java.awt.Component: ...
    def isCellEditable(self, eventObject: java.util.EventObject) -> bool: ...
    def removeCellEditorListener(self, cellEditorListener: javax.swing.event.CellEditorListener) -> None: ...
    def setCellEditorValue(self, object: typing.Any) -> None: ...
    def setClickCountToStart(self, int: int) -> None: ...
    def shouldSelectCell(self, eventObject: java.util.EventObject) -> bool: ...
    def stopCellEditing(self) -> bool: ...

class CategoryElement:
    @typing.overload
    def __init__(self): ...
    @typing.overload
    def __init__(self, string: str): ...
    def getTitle(self) -> str: ...
    def setTitle(self, string: str) -> None: ...

class CategoryExplorerLogRecordFilter(org.apache.log4j.lf5.LogRecordFilter):
    def __init__(self, categoryExplorerModel: 'CategoryExplorerModel'): ...
    def passes(self, logRecord: org.apache.log4j.lf5.LogRecord) -> bool: ...
    def reset(self) -> None: ...

class CategoryExplorerModel(javax.swing.tree.DefaultTreeModel):
    def __init__(self, categoryNode: 'CategoryNode'): ...
    def addActionListener(self, actionListener: java.awt.event.ActionListener) -> None: ...
    def addCategory(self, categoryPath: 'CategoryPath') -> 'CategoryNode': ...
    def addLogRecord(self, logRecord: org.apache.log4j.lf5.LogRecord) -> None: ...
    @typing.overload
    def getCategoryNode(self, string: str) -> 'CategoryNode': ...
    @typing.overload
    def getCategoryNode(self, categoryPath: 'CategoryPath') -> 'CategoryNode': ...
    def getRootCategoryNode(self) -> 'CategoryNode': ...
    def getTreePathToRoot(self, categoryNode: 'CategoryNode') -> javax.swing.tree.TreePath: ...
    def isCategoryPathActive(self, categoryPath: 'CategoryPath') -> bool: ...
    def removeActionListener(self, actionListener: java.awt.event.ActionListener) -> None: ...
    def resetAllNodeCounts(self) -> None: ...
    def setDescendantSelection(self, categoryNode: 'CategoryNode', boolean: bool) -> None: ...
    def setParentSelection(self, categoryNode: 'CategoryNode', boolean: bool) -> None: ...
    def update(self, categoryNode: 'CategoryNode', boolean: bool) -> None: ...

class CategoryExplorerTree(javax.swing.JTree):
    @typing.overload
    def __init__(self): ...
    @typing.overload
    def __init__(self, categoryExplorerModel: CategoryExplorerModel): ...
    def getExplorerModel(self) -> CategoryExplorerModel: ...
    @typing.overload
    def getToolTipText(self) -> str: ...
    @typing.overload
    def getToolTipText(self, mouseEvent: java.awt.event.MouseEvent) -> str: ...

class CategoryImmediateEditor(javax.swing.tree.DefaultTreeCellEditor):
    def __init__(self, jTree: javax.swing.JTree, categoryNodeRenderer: 'CategoryNodeRenderer', categoryNodeEditor: 'CategoryNodeEditor'): ...
    def inCheckBoxHitRegion(self, mouseEvent: java.awt.event.MouseEvent) -> bool: ...
    def shouldSelectCell(self, eventObject: java.util.EventObject) -> bool: ...

class CategoryNode(javax.swing.tree.DefaultMutableTreeNode):
    def __init__(self, string: str): ...
    def addRecord(self) -> None: ...
    def equals(self, object: typing.Any) -> bool: ...
    def getNumberOfContainedRecords(self) -> int: ...
    def getTitle(self) -> str: ...
    def hasFatalChildren(self) -> bool: ...
    def hasFatalRecords(self) -> bool: ...
    def hashCode(self) -> int: ...
    def isSelected(self) -> bool: ...
    def resetNumberOfContainedRecords(self) -> None: ...
    def setAllDescendantsDeSelected(self) -> None: ...
    def setAllDescendantsSelected(self) -> None: ...
    def setHasFatalChildren(self, boolean: bool) -> None: ...
    def setHasFatalRecords(self, boolean: bool) -> None: ...
    def setSelected(self, boolean: bool) -> None: ...
    def toString(self) -> str: ...

class CategoryNodeRenderer(javax.swing.tree.DefaultTreeCellRenderer):
    FATAL_CHILDREN: typing.ClassVar[java.awt.Color] = ...
    def __init__(self): ...
    def getCheckBoxOffset(self) -> java.awt.Dimension: ...
    def getTreeCellRendererComponent(self, jTree: javax.swing.JTree, object: typing.Any, boolean: bool, boolean2: bool, boolean3: bool, int: int, boolean4: bool) -> java.awt.Component: ...

class CategoryPath:
    @typing.overload
    def __init__(self): ...
    @typing.overload
    def __init__(self, string: str): ...
    def addCategoryElement(self, categoryElement: CategoryElement) -> None: ...
    def categoryElementAt(self, int: int) -> CategoryElement: ...
    def isEmpty(self) -> bool: ...
    def removeAllCategoryElements(self) -> None: ...
    def size(self) -> int: ...
    def toString(self) -> str: ...

class TreeModelAdapter(javax.swing.event.TreeModelListener):
    def __init__(self): ...
    def treeNodesChanged(self, treeModelEvent: javax.swing.event.TreeModelEvent) -> None: ...
    def treeNodesInserted(self, treeModelEvent: javax.swing.event.TreeModelEvent) -> None: ...
    def treeNodesRemoved(self, treeModelEvent: javax.swing.event.TreeModelEvent) -> None: ...
    def treeStructureChanged(self, treeModelEvent: javax.swing.event.TreeModelEvent) -> None: ...

class CategoryNodeEditor(CategoryAbstractCellEditor):
    def __init__(self, categoryExplorerModel: CategoryExplorerModel): ...
    def getCellEditorValue(self) -> typing.Any: ...
    def getTreeCellEditorComponent(self, jTree: javax.swing.JTree, object: typing.Any, boolean: bool, boolean2: bool, boolean3: bool, int: int) -> java.awt.Component: ...

class CategoryNodeEditorRenderer(CategoryNodeRenderer):
    def __init__(self): ...
    def getCheckBox(self) -> javax.swing.JCheckBox: ...
    def getTreeCellRendererComponent(self, jTree: javax.swing.JTree, object: typing.Any, boolean: bool, boolean2: bool, boolean3: bool, int: int, boolean4: bool) -> java.awt.Component: ...


class __module_protocol__(typing.Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.apache.log4j.lf5.viewer.categoryexplorer")``.

    CategoryAbstractCellEditor: typing.Type[CategoryAbstractCellEditor]
    CategoryElement: typing.Type[CategoryElement]
    CategoryExplorerLogRecordFilter: typing.Type[CategoryExplorerLogRecordFilter]
    CategoryExplorerModel: typing.Type[CategoryExplorerModel]
    CategoryExplorerTree: typing.Type[CategoryExplorerTree]
    CategoryImmediateEditor: typing.Type[CategoryImmediateEditor]
    CategoryNode: typing.Type[CategoryNode]
    CategoryNodeEditor: typing.Type[CategoryNodeEditor]
    CategoryNodeEditorRenderer: typing.Type[CategoryNodeEditorRenderer]
    CategoryNodeRenderer: typing.Type[CategoryNodeRenderer]
    CategoryPath: typing.Type[CategoryPath]
    TreeModelAdapter: typing.Type[TreeModelAdapter]
