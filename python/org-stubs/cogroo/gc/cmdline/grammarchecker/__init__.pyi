import opennlp.tools.cmdline
import opennlp.tools.cmdline.params
import typing



class ExamplesTool(opennlp.tools.cmdline.BasicCmdLineTool):
    def __init__(self): ...
    def getHelp(self) -> str: ...
    def getShortDescription(self) -> str: ...
    def run(self, stringArray: typing.List[str]) -> None: ...

class GrammarCheckerTool(opennlp.tools.cmdline.BasicCmdLineTool):
    def __init__(self): ...
    def getHelp(self) -> str: ...
    def getShortDescription(self) -> str: ...
    def run(self, stringArray: typing.List[str]) -> None: ...

class LanguageCountryParams(opennlp.tools.cmdline.params.LanguageParams):
    def getCountry(self) -> str: ...

class TextAnalyzerTool(opennlp.tools.cmdline.BasicCmdLineTool):
    def __init__(self): ...
    def getHelp(self) -> str: ...
    def getShortDescription(self) -> str: ...
    def run(self, stringArray: typing.List[str]) -> None: ...

class XMLRulesReportTool(opennlp.tools.cmdline.BasicCmdLineTool):
    def __init__(self): ...
    def getHelp(self) -> str: ...
    def getShortDescription(self) -> str: ...
    def run(self, stringArray: typing.List[str]) -> None: ...


class __module_protocol__(typing.Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("org.cogroo.gc.cmdline.grammarchecker")``.

    ExamplesTool: typing.Type[ExamplesTool]
    GrammarCheckerTool: typing.Type[GrammarCheckerTool]
    LanguageCountryParams: typing.Type[LanguageCountryParams]
    TextAnalyzerTool: typing.Type[TextAnalyzerTool]
    XMLRulesReportTool: typing.Type[XMLRulesReportTool]
